import datetime as dt

class TABLES:
    Tournaments = 'Tournaments'
    ScoreboardGames = 'ScoreboardGames'
    TournamentRosters = 'TournamentRosters'
    ListplayerCurrent = 'ListplayerCurrent'

class FIELDS:
    class Tournaments:
        Name = 'Name'
        OverviewPage = 'OverviewPage'
        DateStart = 'DateStart'
        Date = 'Date'
        DateStartFuzzy = 'DateStartFuzzy'
        League = 'League'
        Region = 'Region'
        Prizepool = 'Prizepool'
        Currency = 'Currency'
        Country = 'Country'
        ClosestTimezone = 'ClosestTimezone'
        Rulebook = 'Rulebook'
        EventType = 'EventType'
        Links = 'Links'
        Sponsors = 'Sponsors'
        Organizer = 'Organizer'
        Organizers = 'Organizers'
        StandardName = 'StandardName'
        StandardName_Redirect = 'StandardName_Redirect'
        BasePage = 'BasePage'
        Split = 'Split'
        SplitNumber = 'SplitNumber'
        SplitMainPage = 'SplitMainPage'
        TournamentLevel = 'TournamentLevel'
        IsQualifier = 'IsQualifier'
        IsPlayoffs = 'IsPlayoffs'
        IsOfficial = 'IsOfficial'
        Year = 'Year'
        LeagueIconKey = 'LeagueIconKey'
        AlternativeNames = 'AlternativeNames'
        ScrapeLink = 'ScrapeLink'
        Tags = 'Tags'
        SuppressTopSchedule = 'SuppressTopSchedule'
        ALL = [Name, OverviewPage, DateStart, Date, DateStartFuzzy, League, Region, Prizepool, Currency, Country, ClosestTimezone, Rulebook, EventType, Links, Sponsors, Organizer, Organizers, StandardName, StandardName_Redirect, BasePage, Split, SplitNumber, SplitMainPage, TournamentLevel, IsQualifier, IsPlayoffs, IsOfficial, Year, LeagueIconKey, AlternativeNames, ScrapeLink, Tags, SuppressTopSchedule]
    class ScoreboardGames: 
        OverviewPage = 'OverviewPage'
        Tournament = 'Tournament'
        Team1 = 'Team1'
        Team2 = 'Team2'
        WinTeam = 'WinTeam'
        LossTeam = 'LossTeam'
        DateTime_UTC = 'DateTime_UTC'
        DST = 'DST'
        Team1Score = 'Team1Score'
        Team2Score = 'Team2Score'
        Winner = 'Winner'
        Gamelength = 'Gamelength'
        Gamelength_Number = 'Gamelength_Number'
        Team1Bans = 'Team1Bans'
        Team2Bans = 'Team2Bans'
        Team1Picks = 'Team1Picks'
        Team2Picks = 'Team2Picks'
        Team1Players = 'Team1Players'
        Team2Players = 'Team2Players'
        Team1Dragons = 'Team1Dragons'
        Team2Dragons = 'Team2Dragons'
        Team1Barons = 'Team1Barons'
        Team2Barons = 'Team2Barons'
        Team1Towers = 'Team1Towers'
        Team2Towers = 'Team2Towers'
        Team1Gold = 'Team1Gold'
        Team2Gold = 'Team2Gold'
        Team1Kills = 'Team1Kills'
        Team2Kills = 'Team2Kills'
        Team1RiftHeralds = 'Team1RiftHeralds'
        Team2RiftHeralds = 'Team2RiftHeralds'
        Team1VoidGrubs = 'Team1VoidGrubs'
        Team2VoidGrubs = 'Team2VoidGrubs'
        Team1Atakhans = 'Team1Atakhans'
        Team2Atakhans = 'Team2Atakhans'
        Team1Inhibitors = 'Team1Inhibitors'
        Team2Inhibitors = 'Team2Inhibitors'
        Patch = 'Patch'
        LegacyPatch = 'LegacyPatch'
        PatchSort = 'PatchSort'
        MatchHistory = 'MatchHistory'
        VOD = 'VOD'
        N_Page = 'N_Page'
        N_MatchInTab = 'N_MatchInTab'
        N_MatchInPage = 'N_MatchInPage'
        N_GameInMatch = 'N_GameInMatch'
        Gamename = 'Gamename'
        UniqueLine = 'UniqueLine'
        GameId = 'GameId'
        MatchId = 'MatchId'
        RiotPlatformGameId = 'RiotPlatformGameId'
        RiotPlatformId = 'RiotPlatformId'
        RiotGameId = 'RiotGameId'
        RiotHash = 'RiotHash'
        RiotVersion = 'RiotVersion'
        ALL = [OverviewPage, Tournament, Team1, Team2, WinTeam, LossTeam, DateTime_UTC, DST, Team1Score, Team2Score, Winner, Gamelength, Gamelength_Number, Team1Bans, Team2Bans, Team1Picks, Team2Picks, Team1Players, Team2Players, Team1Dragons, Team2Dragons, Team1Barons, Team2Barons, Team1Towers, Team2Towers, Team1Gold, Team2Gold, Team1Kills, Team2Kills, Team1RiftHeralds, Team2RiftHeralds, Team1VoidGrubs, Team2VoidGrubs, Team1Atakhans, Team2Atakhans, Team1Inhibitors, Team2Inhibitors, Patch, LegacyPatch, PatchSort, MatchHistory, VOD, N_Page, N_MatchInTab, N_MatchInPage, N_GameInMatch, Gamename, UniqueLine, GameId, MatchId, RiotPlatformGameId, RiotPlatformId, RiotGameId, RiotHash, RiotVersion]
    class TournamentRosters:
        Team = 'Team'
        OverviewPage = 'OverviewPage'
        Region = 'Region'
        RosterLinks = 'RosterLinks'
        Roles = 'Roles'
        Flags = 'Flags'
        Footnotes = 'Footnotes'
        IsUsed = 'IsUsed'
        Tournament = 'Tournament'
        Short = 'Short'
        IsComplete = 'IsComplete'
        PageAndTeam = 'PageAndTeam'
        UniqueLine = 'UniqueLine'
        ALL = [Team, OverviewPage, Region, RosterLinks, Roles, Flags, Footnotes, IsUsed, Tournament, Short, IsComplete, PageAndTeam, UniqueLine]
    class ListplayerCurrent:
        ID = 'ID'
        Link = 'Link'
        Name = 'Name'
        N = 'N'
        Country = 'Country'
        Role = 'Role'
        IsSubstitute = 'IsSubstitute'
        IsTrainee = 'IsTrainee'
        Team = 'Team'
        ContractDate = 'ContractDate'
        Residency = 'Residency'
        ALL = [ID, Link, Name, N, Country, Role, IsSubstitute, IsTrainee, Team, ContractDate, Residency]
        
def getFormattedDate(day, month, year):
    return dt.datetime.strptime(f'{year}-{month}-{day}', "%Y-%m-%d").date()

def getFormattedToday():
    return dt.datetime.today().strftime('%Y-%m-%d')

def getFields(tableVar, *fields):
    return ','.join([f'{tableVar}.{f}' for f in fields])

# only for two tables
def getJoinOn(tableVar1, tableVar2, field):
    return f'{tableVar1}.{field}={tableVar2}.{field}'